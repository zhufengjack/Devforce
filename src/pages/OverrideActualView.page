<apex:page standardController="Actual__c" extensions="OverrideActualPageController" tabStyle="Actual__c" action="{!checkActualRecordType}" id="page"> 
     <script type="text/javascript">
        String.prototype.trim = function() 
        { 
        
        return this.replace(/(^\s*)|(\s*$)/g, ""); 
        
        } 
        function showRefundDialog(paymentId, amount)
        {
            var url = "/apex/RefundDialog?paymentId=" + paymentId + "&amount=" + amount;
            window.open (url, 'newwindow', 'height=440, width=580, top=150, left=300, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no') ;
        }
        function reloadSelf()
        {
            window.location.reload();
        }
        
        function Cancel(actualId, paymentId, method, traceNo, amount)
        {
            var cancelType = -1;
            //Cancel的同时需要创建一条Refund记录，ActiveX空间中已经创建了刷卡Cancel的Refund数据
            if(paymentId == null || paymentId == "")
            {
                alert("Can not load payment data.");
                return;
             }
             if(method == null)
             {
                alert("This payment method cannot support this action.");
                return;
             }
             else if(method.toLowerCase() != 'pos' && method != 'ONLINE PAYMENT-99BILL')
             {
                alert("This payment method(\""+ method +"\") cannot support this action.");
                return;
             }
             cancelType == 0;
             if(method == 'ONLINE PAYMENT-99BILL')
             {
                  cancelType = 1;
             }
             if(traceNo.trim() == "" || traceNo.trim() == "null")
             {
                  alert("You cannot cancel this transaction.");
                  return;
             }
             else
             {
                 if(traceNo.trim().length != 6)
                 {
                    alert("The trace number length must be 6.");
                 }
                 else
                 {
                     var confirm = window.confirm("Do you want to cancel this transaction?");
                     if(confirm)
                     {
                          //如果为当天的交易可以取消，如果不是则不能
                          amount = amount*100;
                          var control = document.getElementById("commCtrl");
                          var strSessionId = "{!$Api.Session_ID}";
                          var strServerUrl = "{!$Api.Partner_Server_URL_130}";
                          control.SessionId = strSessionId;
                          control.ServerUrl = strServerUrl;
                          control.ActualId = paymentId;
                          control.Amount = amount.toString();
                          control.OrginTraceNo = traceNo.trim();
                          control.PaymentId = paymentId;
                          if(cancelType == -1)
                          {
                             control.StartCommTrans(strSessionId);
                          }
                          else if(cancelType == 1)
                          {
                             var orderId = actualId;
                             control.ActualId = orderId;
                             control.CancelNinenineBillCommTrans(6,orderId,traceNo.trim(),"","",strSessionId);
                          }
                      }
                  }
              }
          }

        function numbersonly(myfield, e, dec)
        {
            var key;
            var keychar;
            
            if (window.event)
            {
               key = window.event.keyCode;
            }
            else if (e)
            {
               key = e.which;
            }
            else
            {
               return true;
            }
            keychar = String.fromCharCode(key);
            
            // control keys
            if ((key==null) || (key==0) || (key==8) || (key==9) || (key==13) || (key==27) )
            {
               return true;
            }
            // numbers
            else if ((("0123456789").indexOf(keychar) > -1))
            {
               return true;
            }
            // decimal point jump
            else if (dec && (keychar == "."))
            {
               myfield.form.elements[dec].focus();
               return false;
            }
            else
            {
               return false;
            }
        }
        function swipeZodacard()
        {
           InvokeAxtiveX(0);
        }
        function swipeNinenineBillcard()
        {
           InvokeAxtiveX(1);
        }
        function isNumber(oNum)
        {
          if(!oNum) 
          return false;
          var strP=/^\d+(\.\d+)?$/;
          if(!strP.test(oNum)) 
          return false;
          try
          {
            if(parseFloat(oNum)!=oNum) 
            return false;
          }
          catch(ex)
          {alert(ex);
            return false;
          }
          return true;
       }
        
      function InvokeAxtiveX(controlType)
      {
        var studentOpt = document.getElementById("page:form:block3:section3:sItem2:itemBlock:itemSection:stuPos:studentPos");
        var objSelType = document.getElementById("page:form:block3:section3:sItem2:itemBlock:itemSection:typePos:payTypePos");
        var installments = document.getElementById("page:form:block3:section3:sItem2:itemBlock:itemSection:InstallmentsPos:NoInstallmentsPos");
        var objHolder = document.getElementById("page:form:block3:section3:sItem2:itemBlock:itemSection:cardPos:cardHolderPos");
        if(objHolder.value == null || objHolder.value == "")
        {
           alert("You must provide card holder.");
           objHolder.focus();
           return;
        }
        if(installments.value == null || installments.value == "")
        {
           alert("You must provide installments.");
           installments.focus();
           return;
        }
        var installCount = installments.value.trim();
        if(!isNumber((installments.value).trim()))
        {
          alert("You must provide a number for installments.");
          installments.focus();
          return;
        }
        var amountCtrl = document.getElementById("page:form:block3:section3:sItem2:itemBlock:itemSection:payPos:payAmountPos");
        if(amountCtrl.value == null || amountCtrl.value == "")
        {
           alert("You must provide pay amount.");
           amountCtrl.focus();
           return;
        }
        if(!isNumber((amountCtrl.value).trim()))
        {
          alert("You must provide a number for amount.");
          amountCtrl.focus();
          return;
        }
        amount = amountCtrl.value.trim();
        var confirm = window.confirm("Do you want to submit this transaction?(Deal value : "+amount.toString()+")");
        if(!confirm)
        return;
        amount = amount*100;
        var control = document.getElementById("commCtrl");
        var actualId = "{!$CurrentPage.parameters.id}";
        var strSessionId = "{!$Api.Session_ID}";
        var strServerUrl = "{!$Api.Partner_Server_URL_130}";
        
        control.SessionId = strSessionId;
        control.ServerUrl = strServerUrl;
        control.ActualId = actualId;
        control.Amount = amount.toString();
        control.CardHolder = objHolder.value + ":" + studentOpt.value;
        control.PayType = objSelType.options(objSelType.selectedIndex).value;
        control.OrginTraceNo = "";
        if(controlType == 0)
        {
            control.StartCommTrans(strSessionId);
        }
        else
        {
            control.StartNinenineBillCommTrans(6,actualId,strSessionId);
        }
      }
      function validExpDatebeforCreatedPayment()
      {
        var expDate = document.getElementById("page:form:block3:section4:expDateItem:expDate");
        var ExpDateRegex = /^((0([1-9]{1}))|(1[0-2]{1}))\/([0-9]{2})$/;
        if(expDate != null && expDate.value != null && expDate.value != "")
        {
          if(!ExpDateRegex.test(expDate.value) )
          {
            alert("ExpDate is invalid format!please input exp date format as MM/YY");
            return false;
          }
          else
          {
            var isContinue = confirm('Are you sure?');
            if(!isContinue)
            {
                return false;
            }
          }
        }
        var isContinue2 = confirm('Are you sure?');
        if(!isContinue2)
        {
            return false;
        }
        return true;
      }
      function checkExpDate(expDateStr)
      {
        var expDate = document.getElementById(expDateStr);
        var ExpDateRegex = /^((0([1-9]{1}))|(1[0-2]{1}))\/([0-9]{2})$/;
        if(expDate != null && expDate.value != null && expDate.value != "")
        {
          if(!ExpDateRegex.test(expDate.value) )
          {
            alert("ExpDate is invalid format!please input exp date format as MM/YY");
            expDate.focus();
            return false;
          }
        }
        return true;
      }
      
     </script>
     <apex:sectionHeader title="{!Actual.Name}"/>
     <apex:detail subject="{!Actual.Id}" relatedList="true" title="false"/>
     <apex:variable var="FinancialViewable" value="{!OR(Contains(LOWER($Profile.Name), 'system administrator'), Contains($Profile.Name, 'Finance User New'), Contains($Profile.Name, 'China Finance'), Contains($Profile.Name, 'B2B CR'))}" />
     <apex:form id="form">
     <apex:pageBlock id="block1" title="Student's Actuals" rendered="{!FinancialViewable}"> 
        <apex:pageBlockSection columns="1" id="section1">
            <apex:pageBlockSectionItem >
                <apex:pageBlockTable value="{!AllStudentsForCurrentUser}" var="student" id="studentDataTable"> 
                    <apex:column >
                        <apex:facet name="header">Student Actual Name</apex:facet>
                        <a href="OverrideStudentActualView?id={!student.Id}" target="_blank">{!student.studentName}</a>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Student</apex:facet>
                        <a href="/{!student.StudentId}" target="_blank">{!student.studentName}</a>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Elite Card #</apex:facet>
                        <apex:outputText value="{!student.EliteCard}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Final Price</apex:facet>
                        <apex:outputText value="{!student.finalPrice}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Status</apex:facet>
                        <apex:outputText value="{!student.Status}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Individual Portion</apex:facet>
                        <apex:outputText value="{!student.IndividualPortain}"/>
                    </apex:column>
                </apex:pageBlockTable>
            </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
    </apex:pageBlock> 
    <apex:pageBlock id="block2" title="Payment Details" rendered="{!FinancialViewable}">        
        <apex:pageBlockSection columns="1" id="section2">
            <apex:pageBlockSectionItem rendered="{!Payments.size > 0}" id="sItem">
                <apex:pageBlockTable value="{!Payments}" var="payment" id="payDateTable"> 
                    <apex:column >
                        <apex:facet name="header">NO.</apex:facet>
                        <apex:outputLink value="/{!payment.paymentId}">{!payment.Index}</apex:outputLink>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Student Name</apex:facet>
                        <apex:outputText value="{!payment.StudentActualName}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Amount</apex:facet>
                        <apex:outputText value="{!payment.Amount}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Pay Method</apex:facet>
                        <apex:outputText value="{!payment.PayMethod}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Trace No</apex:facet>
                        <apex:outputText value="{!payment.TraceNo}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Holder</apex:facet>
                        <apex:outputText value="{!payment.CardHolder}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Card No.</apex:facet>
                        <apex:outputText value="{!payment.CardNo}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Bank Name</apex:facet>
                        <apex:outputText value="{!payment.bankName}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">TransDatetime</apex:facet>
                        <apex:outputText value="{!payment.DueDate}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Card Exp Date</apex:facet>
                        <apex:outputText value="{!payment.CardExpDate}"/>
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Pay Type</apex:facet>
                        <apex:outputText value="{!payment.PayType}"/> 
                    </apex:column>
                    <apex:column >
                        <apex:facet name="header">Command</apex:facet>
                        <apex:commandButton action="{!payment.Refund}" value="Refund" onclick="showRefundDialog('{!payment.PaymentId}', '{!payment.Amount}')" disabled="{!payment.IsCanRefund}" reRender="message"/>
                        <apex:commandButton action="{!payment.Cancel}" value="Cancel" onclick="cancel()" rendered="{!payment.IsRenderCancelButton}" onclick="return Cancel('{!payment.ActualId}', '{!payment.PaymentId}','{!payment.PayMethod}', '{!payment.TraceNo}', '{!payment.Amount}');" disabled="{!payment.IsCanCancel}" reRender="message"/>             
                        <apex:commandButton action="{!payment.PayWithDeposit}" value="Pay with Deposit" onclick="if(!confirm('Are you sure?'))return false;" rendered="{!payment.IsRenderPayWithDepositButton}" disabled="{!payment.IsDisabledPayDesButton}" reRender="message"/>
                    </apex:column>
                </apex:pageBlockTable>
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem rendered="{!Payments.size == 0}">
            No records to display
            </apex:pageBlockSectionItem>
        </apex:pageBlockSection>
    </apex:pageBlock>
    <apex:pageBlock id="block3" title="Create New Payment" rendered="{!FinancialViewable}">
            <apex:pageBlockSection columns="2" id="section3"> 
                <apex:pageBlockSectionItem id="sItem2">
                    <apex:pageBlock id="itemBlock">
                        <apex:pageBlockSection columns="1" id="itemSection">
                            <apex:pageBlockSectionItem id="stuPos">
                                <apex:outputLabel value="Select a Student" for="studentPos" />
                                <apex:selectList value="{!selectedStudentPos}" id="studentPos" size="1" multiselect="false">
                                    <apex:selectOptions value="{!AllStudentActuals}"/> 
                                </apex:selectList>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem id="payPos">
                                <apex:outputLabel value="Amount" for="payAmountPos"/>
                                <apex:inputField value="{!NewPaymentPos.Amount__c}" id="payAmountPos"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem id="cardPos">
                                <apex:outputLabel value="Account Holder" for="cardHolderPos"/>
                                <apex:inputField value="{!NewPaymentPos.Card_Holder__c}" id="cardHolderPos"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem id="typePos" >
                                <apex:outputLabel value="Pay Type" for="payTypePos"/>
                                <apex:inputField value="{!NewPaymentPos.Pay_Type__c}" id="payTypePos"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem id="InstallmentsPos">
                                <apex:outputLabel value="NO. of Installments" for="NoInstallmentsPos"/>
                                <apex:inputField value="{!NewPaymentPos.no_of_installments__c}" id="NoInstallmentsPos"/>
                            </apex:pageBlockSectionItem>
                            <apex:pageBlockSectionItem >
                                <input type="button" class="btn" value="Pay by Zoda" style="margin-right:10px;margin-left:50px" onclick="swipeZodacard()"/>
                                <input type="button" class="btn" value="Pay by 99Bill" onclick="swipeNinenineBillcard()"/>
                            </apex:pageBlockSectionItem>
                        </apex:pageBlockSection>
                    </apex:pageBlock>   
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:pageBlock >
                        <apex:pageBlockSection columns="1">
                            <apex:pageBlockSectionItem >
                                <OBJECT id="commCtrl" name="commCtrl" classid="clsid:b792c02f-2640-4e50-ac62-831464c975a8">
                                  <SPAN STYLE="color:red">
                                  ActiveX control failed to load!
                                  -- Please check browser security settings.
                                  </SPAN>
                                </OBJECT>
                            </apex:pageBlockSectionItem>
                        </apex:pageBlockSection>
                    </apex:pageBlock>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="2" title="Create New Payment" id="section4">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Select Student(s)" for="student"/>
                    <apex:selectCheckboxes value="{!SelectedStudent}" layout="pageDirection">
                        <apex:selectOptions value="{!AllStudentActuals}"/> 
                    </apex:selectCheckboxes>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Total Amount" for="payAmount"/>
                    <apex:inputField value="{!NewPayment.Amount__c}" id="payAmount"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Pay method" for="payMethod"/>
                    <apex:inputField value="{!NewPayment.Payment_method__c}" id="payMethod"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Pay Type" for="payType"/>
                    <apex:inputField value="{!NewPayment.Pay_Type__c}" id="payType"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Bank Name" for="bankName"/>
                    <apex:selectList value="{!BankName}" id="bankName" size="1">
                        <apex:selectOptions value="{!items}"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Card NO." for="cardNo"/>
                    <apex:inputField value="{!NewPayment.CardNo__c}" id="cardNo"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="expDateItem">
                    <apex:outputLabel value="Card Exp Date (MM/YY)" for="expDate"/>
                    <apex:inputField value="{!NewPayment.Exp_Date__c}" id="expDate" onblur="checkExpDate('page:form:block3:section4:expDateItem:expDate');"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Account Holder" for="cardHolder"/>
                    <apex:inputField value="{!NewPayment.Card_Holder__c}" id="cardHolder"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="NO. of Installments" for="NoInstallments"/>
                    <apex:inputField value="{!NewPayment.no_of_installments__c}" id="NoInstallments"/>
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem >
                    &nbsp;
                </apex:pageBlockSectionItem>
                <apex:commandButton action="{!CreatePaymentData}" value="Create Payment" reRender="message" onclick="if(checkExpDate('page:form:block3:section4:expDateItem:expDate')) {if(!confirm('Are you sure?'))return false;}else{return false;}" style="float:right"/>
            </apex:pageBlockSection>
            <div style="clear:both"></div>
            <apex:pageMessages id="message" escape="false"/>
        </apex:pageBlock>
     </apex:form>
</apex:page>